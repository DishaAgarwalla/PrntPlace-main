{
  "contractName": "ERC721Full",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology.  * See https://eips.ethereum.org/EIPS/eip-721\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.     * _Available since v2.5.0._\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.      * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.      * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.      * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"Full ERC721 Token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721Full.sol\":\"ERC721Full\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x98d9c3f119eabc9384b14d85702d9a1249760fc32ae8cb295f1071a064c6733a\",\"urls\":[\"bzz-raw://a3405e6d7e177d0ef81858e81dea76264c9b71a8dda1efe3911df79f45fbb848\",\"dweb:/ipfs/Qmf69RTdxy32UXNJPFQz8M8C6Shhf1i6B1NiYWzDA8FUnS\"]},\"@openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xedc1d46f66898d8ae33a7e16244579d680a25554936a5e72f59f535d0a8b5dfe\",\"urls\":[\"bzz-raw://75767fdcb9c070eba4fc6928c32e528b59a01dfbf6c2a9e7cc2e6eb41aa7fdb3\",\"dweb:/ipfs/QmSTw8hVMozyrJjxN49c7tCHfAxKRPQbzNHdS22TK4VUyp\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xfd2daf3123fb28a75b3c11e6d6e16f594e2cb60f1e55d06669870d113499ca16\",\"urls\":[\"bzz-raw://bf23587e2a8722926619f5278f91a295df47f8f915193ec3ebb74a404cc26e92\",\"dweb:/ipfs/QmRVZZTUa59MBe2MVZGF8gZQ6iTqAtG319BKVpMYzsbp3i\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x84f9de8008f3c333e320fa8eac048f6f59780ead789d47be58b60be6ef5b49fe\",\"urls\":[\"bzz-raw://8ac42de7293bb11d7d64c199478e1bfa762f425226a973319da6159ba407b34c\",\"dweb:/ipfs/QmPGVG3PSHAXsJoW9rJZGo1bMUK8yS3HqxZGGXkCQ4d6nZ\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xeb295b448107f6adee6c0861eba7cd58983eeb1a2bf9cd24b3df9c75fe17db75\",\"urls\":[\"bzz-raw://781a662595af8ecda052135a27529293189c1cdf40bc5e2934a62b3bc2b327ea\",\"dweb:/ipfs/QmNaGn5PyRCu3tfBu6mMwx3j2BHJiXWKiYGHSAu3au6P7S\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xa76a2f7238f52404f2e96e66444f7a0e7cb72950270830b3f0636f0a280d7e12\",\"urls\":[\"bzz-raw://2f285a018744d4a2469a91427c244abbd2c8c63bb7b9aed8b2eafb81634e4e9f\",\"dweb:/ipfs/QmUMTtLUwCctaaHw676j9bHf9LQya9YNxH4dn7NrCSryo5\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0xb9db4dff2c2db64eb65ba1ac5f40a31e1d87070eb68ce3daadafdf303e8530f6\",\"urls\":[\"bzz-raw://8b5b392d8f42d42eb6f84dd8cb548fefabfe2e06fd1dcfa4eb52597ed6d67bba\",\"dweb:/ipfs/QmchaDW9fcW91sJckEPgoLrDkq8S9jdPerWUtzKVWeTYxG\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0xd134c220604815f40ca03bcf25b487ee9956eebb195e14beabb65429c17d2859\",\"urls\":[\"bzz-raw://8d843226d1ebbf2a532f5001b677566bd7db6b3a6e2509ad051394c97dafb1c2\",\"dweb:/ipfs/QmeQxgtNDPwXAAuWgTd2sMzH2M2MakbVnfwfiYjLLkzFzc\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x6cd4a1465bb7a2b1ae9f37f328c42c300960189743b3d531c784980afa6394a7\",\"urls\":[\"bzz-raw://1942add9923354d70cb0b4a4bdf4d1f06ddaefe9f0f47a1bd6afe78f4249d919\",\"dweb:/ipfs/QmcNFXEs1n6mF8zdafjdNHJoULaR84kYauqjzCnUvrKgHr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x447b39ec5e41ab4bbffefe1d6daf32850fd997cba2889547ad9c5541d10d3493\",\"urls\":[\"bzz-raw://f4ad7e1c3eb573d34c5156bf510dd1eebc0e7c028a4160e0f90c1cce0dd5c1bf\",\"dweb:/ipfs/QmQz92NeaqSg5xWX5vB9V3iWHcLQoAWJmL6HVX1KaZ3HaV\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x00ab4bb6af6d6c42cd1cdc6ad041a84c71dcc671bbb7a4a6dcdc2c103bff8dae\",\"urls\":[\"bzz-raw://6d76762f7d00c7c3e3c9df8b5c4ba92d88cb58e9d6724732fa15700c7e42bb3c\",\"dweb:/ipfs/QmdcoMehHQ8tnKGrfAiaCfPKkmqhtxc9HszJDHVuJVpQnz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xff23c79b568abcb7b18a2e46d56a0f223fb2cfd87528296f8cf8b244eb0408f3\",\"urls\":[\"bzz-raw://4cfff2d02ed9dd50a154218a493ae20156cf7b37f88a0acb0c711803c7d30de1\",\"dweb:/ipfs/QmbTKgEMSStQpf3yNqgbFRfbo6cb2dQzw6cgAm5PNzw8tB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x547a657dc6f559ab1f6f347f203fadf5be0b317eb44197a843cea050dc4eb4af\",\"urls\":[\"bzz-raw://19015f45cf266caead2e5a439feabff48d2e760edc31998b199dd9acc8993040\",\"dweb:/ipfs/QmR59wrqUSRUpWV3LuUmLoi2yvfBguSRVGyTGuVPo8QQgb\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x8c5942fe8431d01c0c65ad7132884f34beb3b70cd9f88b328f40d51cc03241b4\",\"urls\":[\"bzz-raw://e3d970a3485dc0a1e12c0a2c7e2e1748d2826d853758d79a920d2ccaf4b91fb9\",\"dweb:/ipfs/QmPzrPAM58SxuKMKugfrgX39ssFfhmMgnyaGBomzotZoMM\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a257806395d89b411161007157806395d89b4114610349578063a22cb46514610351578063b88d4fde1461037f578063c87b56dd14610445578063e985e9c5146104625761010b565b80634f6ccce7146102e15780636352211e146102fe5780636c0360eb1461031b57806370a08231146103235761010b565b806318160ddd116100de57806318160ddd1461022f57806323b872dd146102495780632f745c591461027f57806342842e0e146102ab5761010b565b806301ffc9a71461011057806306fdde031461014b578063081812fc146101c8578063095ea7b314610201575b600080fd5b6101376004803603602081101561012657600080fd5b50356001600160e01b031916610490565b604080519115158252519081900360200190f35b6101536104b3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018d578181015183820152602001610175565b50505050905090810190601f1680156101ba5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e5600480360360208110156101de57600080fd5b503561054a565b604080516001600160a01b039092168252519081900360200190f35b61022d6004803603604081101561021757600080fd5b506001600160a01b0381351690602001356105ac565b005b6102376106d4565b60408051918252519081900360200190f35b61022d6004803603606081101561025f57600080fd5b506001600160a01b038135811691602081013590911690604001356106da565b6102376004803603604081101561029557600080fd5b506001600160a01b038135169060200135610736565b61022d600480360360608110156102c157600080fd5b506001600160a01b038135811691602081013590911690604001356107b5565b610237600480360360208110156102f757600080fd5b50356107d0565b6101e56004803603602081101561031457600080fd5b5035610836565b610153610890565b6102376004803603602081101561033957600080fd5b50356001600160a01b03166108f1565b610153610959565b61022d6004803603604081101561036757600080fd5b506001600160a01b03813516906020013515156109ba565b61022d6004803603608081101561039557600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103d057600080fd5b8201836020820111156103e257600080fd5b8035906020019184600183028401116401000000008311171561040457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610abf945050505050565b6101536004803603602081101561045b57600080fd5b5035610b1d565b6101376004803603604081101561047857600080fd5b506001600160a01b0381358116916020013516610ce9565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b505050505090505b90565b600061055582610d17565b6105905760405162461bcd60e51b815260040180806020018281038252602c8152602001806115ef602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b60006105b782610836565b9050806001600160a01b0316836001600160a01b0316141561060a5760405162461bcd60e51b81526004018080602001828103825260218152602001806116736021913960400191505060405180910390fd5b806001600160a01b031661061c610d34565b6001600160a01b0316148061063d575061063d81610638610d34565b610ce9565b6106785760405162461bcd60e51b81526004018080602001828103825260388152602001806115646038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b6106eb6106e5610d34565b82610d38565b6107265760405162461bcd60e51b81526004018080602001828103825260318152602001806116946031913960400191505060405180910390fd5b610731838383610ddc565b505050565b6000610741836108f1565b821061077e5760405162461bcd60e51b815260040180806020018281038252602b8152602001806114b7602b913960400191505060405180910390fd5b6001600160a01b03831660009081526005602052604090208054839081106107a257fe5b9060005260206000200154905092915050565b61073183838360405180602001604052806000815250610abf565b60006107da6106d4565b82106108175760405162461bcd60e51b815260040180806020018281038252602c8152602001806116c5602c913960400191505060405180910390fd5b6007828154811061082457fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b03168061088a5760405162461bcd60e51b81526004018080602001828103825260298152602001806115c66029913960400191505060405180910390fd5b92915050565b600b8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b60006001600160a01b0382166109385760405162461bcd60e51b815260040180806020018281038252602a81526020018061159c602a913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061088a90610dfb565b600a8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b6109c2610d34565b6001600160a01b0316826001600160a01b03161415610a28576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000610a35610d34565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610a79610d34565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610ad0610aca610d34565b83610d38565b610b0b5760405162461bcd60e51b81526004018080602001828103825260318152602001806116946031913960400191505060405180910390fd5b610b1784848484610dff565b50505050565b6060610b2882610d17565b610b635760405162461bcd60e51b815260040180806020018281038252602f815260200180611644602f913960400191505060405180910390fd5b6000828152600c602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610bf85780601f10610bcd57610100808354040283529160200191610bf8565b820191906000526020600020905b815481529060010190602001808311610bdb57829003601f168201915b50505050509050805160001415610c1f5750506040805160208101909152600081526104ae565b600b816040516020018083805460018160011615610100020316600290048015610c805780601f10610c5e576101008083540402835291820191610c80565b820191906000526020600020905b815481529060010190602001808311610c6c575b5050825160208401908083835b60208310610cac5780518252601f199092019160209182019101610c8d565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506104ae565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b3390565b6000610d4382610d17565b610d7e5760405162461bcd60e51b815260040180806020018281038252602c815260200180611538602c913960400191505060405180910390fd5b6000610d8983610836565b9050806001600160a01b0316846001600160a01b03161480610dc45750836001600160a01b0316610db98461054a565b6001600160a01b0316145b80610dd45750610dd48185610ce9565b949350505050565b610de7838383610e51565b610df18382610f95565b610731828261108a565b5490565b610e0a848484610ddc565b610e16848484846110c8565b610b175760405162461bcd60e51b81526004018080602001828103825260328152602001806114e26032913960400191505060405180910390fd5b826001600160a01b0316610e6482610836565b6001600160a01b031614610ea95760405162461bcd60e51b815260040180806020018281038252602981526020018061161b6029913960400191505060405180910390fd5b6001600160a01b038216610eee5760405162461bcd60e51b81526004018080602001828103825260248152602001806115146024913960400191505060405180910390fd5b610ef781611303565b6001600160a01b0383166000908152600360205260409020610f1890611340565b6001600160a01b0382166000908152600360205260409020610f3990611357565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216600090815260056020526040812054610fbf90600163ffffffff61136016565b60008381526006602052604090205490915080821461105a576001600160a01b0384166000908152600560205260408120805484908110610ffc57fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061103a57fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b0384166000908152600560205260409020805490611083906000198301611479565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b60006110dc846001600160a01b03166113a9565b6110e857506001610dd4565b600060606001600160a01b038616630a85bd0160e11b611106610d34565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561117f578181015183820152602001611167565b50505050905090810190601f1680156111ac5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b602083106112145780518252601f1990920191602091820191016111f5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611276576040519150601f19603f3d011682016040523d82523d6000602084013e61127b565b606091505b5091509150816112cc578051156112955780518082602001fd5b60405162461bcd60e51b81526004018080602001828103825260328152602001806114e26032913960400191505060405180910390fd5b60008180602001905160208110156112e357600080fd5b50516001600160e01b031916630a85bd0160e11b149350610dd492505050565b6000818152600260205260409020546001600160a01b03161561133d57600081815260026020526040902080546001600160a01b03191690555b50565b805461135390600163ffffffff61136016565b9055565b80546001019055565b60006113a283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506113e2565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610dd4575050151592915050565b600081848411156114715760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561143657818101518382015260200161141e565b50505050905090810190601f1680156114635780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b8154818355818111156107315760008381526020902061073191810190830161054791905b808211156114b2576000815560010161149e565b509056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a723158201c5622659db1c343ef65bc1b9b273b901e3f71125118cc93920057347e7112bf64736f6c63430005100032",
  "sourceMap": "399:231:25:-;;;470:157;8:9:-1;5:2;;;30:1;27;20:12;5:2;470:157:25;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;470:157:25;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;470:157:25;;420:4:-1;411:14;;;;470:157:25;;;;;411:14:-1;470:157:25;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;470:157:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;470:157:25;;420:4:-1;411:14;;;;470:157:25;;;;;411:14:-1;470:157:25;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;470:157:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;470:157:25;;-1:-1:-1;547:4:25;;-1:-1:-1;553:6:25;;-1:-1:-1;742:40:19;-1:-1:-1;;;;;;;;742:18:19;:40;:::i;:::-;2315::23;-1:-1:-1;;;;;;;;2315:18:23;:40;:::i;:::-;1395:51:24;-1:-1:-1;;;;;;;;1395:18:24;:51;:::i;:::-;945:12:26;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;968:16:26;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1075:49:26;-1:-1:-1;;;;;;;;1075:18:26;:49;:::i;:::-;872:260;;470:157:25;;399:231;;1489:193:19;-1:-1:-1;;;;;;1565:25:19;;;;;1557:66;;;;;-1:-1:-1;;;1557:66:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1634:33:19;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1634:40:19;1670:4;1634:40;;;1489:193::o;399:231:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;399:231:25;;;-1:-1:-1;399:231:25;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "399:231:25:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;399:231:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:135:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;947:135:19;-1:-1:-1;;;;;;947:135:19;;:::i;:::-;;;;;;;;;;;;;;;;;;1243:85:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1243:85:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4388:204:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4388:204:23;;:::i;:::-;;;;-1:-1:-1;;;;;4388:204:23;;;;;;;;;;;;;;3670:425;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3670:425:23;;;;;;;;:::i;:::-;;2227:96:24;;;:::i;:::-;;;;;;;;;;;;;;;;6071:292:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6071:292:23;;;;;;;;;;;;;;;;;:::i;1836:232:24:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1836:232:24;;;;;;;;:::i;7025:134:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7025:134:23;;;;;;;;;;;;;;;;;:::i;2669:199:24:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2669:199:24;;:::i;3011:228:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3011:228:23;;:::i;3496:91:26:-;;;:::i;2574:211:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2574:211:23;-1:-1:-1;;;;;2574:211:23;;:::i;1443:89:26:-;;;:::i;4893:254:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4893:254:23;;;;;;;;;;:::i;7896:272::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7896:272:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7896:272:23;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7896:272:23;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7896:272:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7896:272:23;;-1:-1:-1;7896:272:23;;-1:-1:-1;;;;;7896:272:23:i;1845:557:26:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1845:557:26;;:::i;5477:147:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5477:147:23;;;;;;;;;;:::i;947:135:19:-;-1:-1:-1;;;;;;1041:33:19;;1017:4;1041:33;;;;;;;;;;;;;947:135;;;;:::o;1243:85:26:-;1315:5;1308:12;;;;;;;;-1:-1:-1;;1308:12:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1282:13;;1308:12;;1315:5;;1308:12;;1315:5;1308:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:85;;:::o;4388:204:23:-;4447:7;4475:16;4483:7;4475;:16::i;:::-;4467:73;;;;-1:-1:-1;;;4467:73:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4560:24:23;;;;:15;:24;;;;;;-1:-1:-1;;;;;4560:24:23;;4388:204::o;3670:425::-;3734:13;3750:16;3758:7;3750;:16::i;:::-;3734:32;;3791:5;-1:-1:-1;;;;;3785:11:23;:2;-1:-1:-1;;;;;3785:11:23;;;3777:57;;;;-1:-1:-1;;;3777:57:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3871:5;-1:-1:-1;;;;;3855:21:23;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3855:21:23;;:62;;;;3880:37;3897:5;3904:12;:10;:12::i;:::-;3880:16;:37::i;:::-;3847:154;;;;-1:-1:-1;;;3847:154:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4014:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;4014:29:23;-1:-1:-1;;;;;4014:29:23;;;;;;;;;4059:28;;4014:24;;4059:28;;;;;;;3670:425;;;:::o;2227:96:24:-;2298:10;:17;2227:96;:::o;6071:292:23:-;6215:41;6234:12;:10;:12::i;:::-;6248:7;6215:18;:41::i;:::-;6207:103;;;;-1:-1:-1;;;6207:103:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6323:32;6337:4;6343:2;6347:7;6323:13;:32::i;:::-;6071:292;;;:::o;1836:232:24:-;1916:7;1952:16;1962:5;1952:9;:16::i;:::-;1944:5;:24;1936:80;;;;-1:-1:-1;;;1936:80:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2034:19:24;;;;;;:12;:19;;;;;:26;;2054:5;;2034:26;;;;;;;;;;;;;;2027:33;;1836:232;;;;:::o;7025:134:23:-;7112:39;7129:4;7135:2;7139:7;7112:39;;;;;;;;;;;;:16;:39::i;2669:199:24:-;2727:7;2763:13;:11;:13::i;:::-;2755:5;:21;2747:78;;;;-1:-1:-1;;;2747:78:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2843:10;2854:5;2843:17;;;;;;;;;;;;;;;;2836:24;;2669:199;;;:::o;3011:228:23:-;3066:7;3102:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3102:20:23;3141:19;3133:73;;;;-1:-1:-1;;;3133:73:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3226:5;3011:228;-1:-1:-1;;3011:228:23:o;3496:91:26:-;3571:8;3564:15;;;;;;;;-1:-1:-1;;3564:15:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:13;;3564:15;;3571:8;;3564:15;;3571:8;3564:15;;;;;;;;;;;;;;;;;;;;;;;;2574:211:23;2629:7;-1:-1:-1;;;;;2657:19:23;;2649:74;;;;-1:-1:-1;;;2649:74:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2743:24:23;;;;;;:17;:24;;;;;:34;;:32;:34::i;1443:89:26:-;1517:7;1510:14;;;;;;;;-1:-1:-1;;1510:14:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1484:13;;1510:14;;1517:7;;1510:14;;1517:7;1510:14;;;;;;;;;;;;;;;;;;;;;;;;4893:254:23;4979:12;:10;:12::i;:::-;-1:-1:-1;;;;;4973:18:23;:2;-1:-1:-1;;;;;4973:18:23;;;4965:56;;;;;-1:-1:-1;;;4965:56:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;5073:8;5034:18;:32;5053:12;:10;:12::i;:::-;-1:-1:-1;;;;;5034:32:23;;;;;;;;;;;;;;;;;-1:-1:-1;5034:32:23;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;5034:47:23;;;;;;;;;;;5112:12;:10;:12::i;:::-;5097:42;;;;;;;;;;-1:-1:-1;;;;;5097:42:23;;;;;;;;;;;;;;4893:254;;:::o;7896:272::-;8011:41;8030:12;:10;:12::i;:::-;8044:7;8011:18;:41::i;:::-;8003:103;;;;-1:-1:-1;;;8003:103:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8117:43;8135:4;8141:2;8145:7;8154:5;8117:17;:43::i;:::-;7896:272;;;;:::o;1845:557:26:-;1903:13;1937:16;1945:7;1937;:16::i;:::-;1929:76;;;;-1:-1:-1;;;1929:76:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2044:19;;;;:10;:19;;;;;;;;;2018:45;;;;;;-1:-1:-1;;2018:45:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;2044:19;2018:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:9;2174:23;2201:1;2174:28;2170:225;;;-1:-1:-1;;2219:9:26;;;;;;;;;-1:-1:-1;2219:9:26;;;;2170:225;2362:8;2372:9;2345:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2345:37:26;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2345:37:26;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2345:37:26;;;2331:52;;;;;5477:147:23;-1:-1:-1;;;;;5581:25:23;;;5557:4;5581:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5477:147::o;9361:155::-;9418:4;9451:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9451:20:23;9489:19;;;9361:155::o;806:98:17:-;886:10;806:98;:::o;9886:333:23:-;9971:4;9996:16;10004:7;9996;:16::i;:::-;9988:73;;;;-1:-1:-1;;;9988:73:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10072:13;10088:16;10096:7;10088;:16::i;:::-;10072:32;;10134:5;-1:-1:-1;;;;;10123:16:23;:7;-1:-1:-1;;;;;10123:16:23;;:51;;;;10167:7;-1:-1:-1;;;;;10143:31:23;:20;10155:7;10143:11;:20::i;:::-;-1:-1:-1;;;;;10143:31:23;;10123:51;:87;;;;10178:32;10195:5;10202:7;10178:16;:32::i;:::-;10115:96;9886:333;-1:-1:-1;;;;9886:333:23:o;3252:245:24:-;3338:38;3358:4;3364:2;3368:7;3338:19;:38::i;:::-;3389:47;3422:4;3428:7;3389:32;:47::i;:::-;3449:40;3477:2;3481:7;3449:27;:40::i;1090:114:18:-;1182:14;;1090:114::o;8887:272:23:-;8997:32;9011:4;9017:2;9021:7;8997:13;:32::i;:::-;9048:48;9071:4;9077:2;9081:7;9090:5;9048:22;:48::i;:::-;9040:111;;;;-1:-1:-1;;;9040:111:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13582:459;13696:4;-1:-1:-1;;;;;13676:24:23;:16;13684:7;13676;:16::i;:::-;-1:-1:-1;;;;;13676:24:23;;13668:78;;;;-1:-1:-1;;;13668:78:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13765:16:23;;13757:65;;;;-1:-1:-1;;;13757:65:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13835:23;13850:7;13835:14;:23::i;:::-;-1:-1:-1;;;;;13871:23:23;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;13917:21:23;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;13963:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;13963:25:23;-1:-1:-1;;;;;13963:25:23;;;;;;;;;14006:27;;13963:20;;14006:27;;;;;;;13582:459;;;:::o;6437:1148:24:-;-1:-1:-1;;;;;6728:18:24;;6703:22;6728:18;;;:12;:18;;;;;:25;:32;;6758:1;6728:32;:29;:32;:::i;:::-;6771:18;6792:26;;;:17;:26;;;;;;6703:57;;-1:-1:-1;6925:28:24;;;6921:328;;-1:-1:-1;;;;;6992:18:24;;6970:19;6992:18;;;:12;:18;;;;;:34;;7011:14;;6992:34;;;;;;;;;;;;;;6970:56;;7076:11;7043:12;:18;7056:4;-1:-1:-1;;;;;7043:18:24;-1:-1:-1;;;;;7043:18:24;;;;;;;;;;;;7062:10;7043:30;;;;;;;;;;;;;;;;;;;:44;;;;7160:30;;;:17;:30;;;;;:43;;;6921:328;-1:-1:-1;;;;;7338:18:24;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;7338:27:24;;;:::i;:::-;;6437:1148;;;;:::o;5259:186::-;-1:-1:-1;;;;;5373:16:24;;;;;;;:12;:16;;;;;;;;:23;;5344:26;;;:17;:26;;;;;:52;;;5407:16;;;39:1:-1;23:18;;45:23;;5407:30:24;;;;;;;;5259:186::o;14693:1079:23:-;14815:4;14842:15;:2;-1:-1:-1;;;;;14842:13:23;;:15::i;:::-;14837:60;;-1:-1:-1;14881:4:23;14874:11;;14837:60;14968:12;14982:23;-1:-1:-1;;;;;15009:7:23;;-1:-1:-1;;;15114:12:23;:10;:12::i;:::-;15141:4;15160:7;15182:5;15017:181;;;;;;-1:-1:-1;;;;;15017:181:23;-1:-1:-1;;;;;15017:181:23;;;;;;-1:-1:-1;;;;;15017:181:23;-1:-1:-1;;;;;15017:181:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15017:181:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15017:181:23;;;-1:-1:-1;;26:21;;;22:32;6:49;;15017:181:23;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;15017:181:23;;;179:29:-1;;;;160:49;;15009:190:23;;;15017:181;;15009:190;;-1:-1:-1;15009:190:23;;-1:-1:-1;25:18;-1:-1;15009:190:23;-1:-1:-1;15009:190:23;;-1:-1:-1;15009:190:23;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;15009:190:23;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14967:232:23;;;;15215:7;15210:555;;15243:17;;:21;15239:384;;15411:10;15405:17;15472:15;15459:10;15455:2;15451:19;15444:44;15359:148;15547:60;;-1:-1:-1;;;15547:60:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15210:555;15655:13;15682:10;15671:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15671:32:23;-1:-1:-1;;;;;;15726:26:23;-1:-1:-1;;;15726:26:23;;-1:-1:-1;15718:35:23;;-1:-1:-1;;;15718:35:23;15940:175;16040:1;16004:24;;;:15;:24;;;;;;-1:-1:-1;;;;;16004:24:23;:38;16000:108;;16094:1;16059:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;16059:37:23;;;16000:108;15940:175;:::o;1401:110:18:-;1482:14;;:21;;1501:1;1482:21;:18;:21;:::i;:::-;1465:38;;1401:110::o;1212:181::-;1366:19;;1384:1;1366:19;;;1212:181::o;1315:136:21:-;1373:7;1400:43;1404:1;1407;1400:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1393:50;1315:136;-1:-1:-1;;;1315:136:21:o;709:619:31:-;769:4;1237:20;;1080:66;1277:23;;;;;;:42;;-1:-1:-1;;1304:15:31;;;1269:51;-1:-1:-1;;709:619:31:o;1788:192:21:-;1874:7;1910:12;1902:6;;;;1894:29;;;;-1:-1:-1;;;1894:29:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1894:29:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1946:5:21;;;1788:192::o;399:231:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./ERC721.sol\";\r\nimport \"./ERC721Enumerable.sol\";\r\nimport \"./ERC721Metadata.sol\";\r\n\r\n/**\r\n * @title Full ERC721 Token\r\n * @dev This implementation includes all the required and some optional functionality of the ERC721 standard\r\n * Moreover, it includes approve all functionality using operator terminology.\r\n *\r\n * See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ncontract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {\r\n    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n}\r\n",
  "sourcePath": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        3154
      ]
    },
    "id": 3155,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3132,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 3133,
        "nodeType": "ImportDirective",
        "scope": 3155,
        "sourceUnit": 2791,
        "src": "27:22:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 3134,
        "nodeType": "ImportDirective",
        "scope": 3155,
        "sourceUnit": 3131,
        "src": "51:32:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 3135,
        "nodeType": "ImportDirective",
        "scope": 3155,
        "sourceUnit": 3328,
        "src": "85:30:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3136,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2790,
              "src": "422:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2790",
                "typeString": "contract ERC721"
              }
            },
            "id": 3137,
            "nodeType": "InheritanceSpecifier",
            "src": "422:6:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3138,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3130,
              "src": "430:16:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$3130",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 3139,
            "nodeType": "InheritanceSpecifier",
            "src": "430:16:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3140,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3327,
              "src": "448:14:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$3327",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 3141,
            "nodeType": "InheritanceSpecifier",
            "src": "448:14:25"
          }
        ],
        "contractDependencies": [
          1703,
          1804,
          1814,
          2790,
          3130,
          3327,
          3430,
          3457,
          3480
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\n@dev This implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology.\n\n * See https://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 3154,
        "linearizedBaseContracts": [
          3154,
          3327,
          3480,
          3130,
          3457,
          2790,
          3430,
          1804,
          1814,
          1703
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3152,
              "nodeType": "Block",
              "src": "561:66:25",
              "statements": []
            },
            "documentation": null,
            "id": 3153,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3148,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3143,
                    "src": "547:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3149,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3145,
                    "src": "553:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3150,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3147,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3327,
                  "src": "532:14:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$3327_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "532:28:25"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3143,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3153,
                  "src": "483:18:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3145,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3153,
                  "src": "503:20:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3144,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "482:42:25"
            },
            "returnParameters": {
              "id": 3151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:0:25"
            },
            "scope": 3154,
            "src": "470:157:25",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3155,
        "src": "399:231:25"
      }
    ],
    "src": "0:632:25"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
      "exportedSymbols": {
        "ERC721Full": [
          3154
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 3132,
        "name": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "attributes": {
          "SourceUnit": 2791,
          "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
          "file": "./ERC721.sol",
          "scope": 3155,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3133,
        "name": "ImportDirective",
        "src": "27:22:25"
      },
      {
        "attributes": {
          "SourceUnit": 3131,
          "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol",
          "file": "./ERC721Enumerable.sol",
          "scope": 3155,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3134,
        "name": "ImportDirective",
        "src": "51:32:25"
      },
      {
        "attributes": {
          "SourceUnit": 3328,
          "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol",
          "file": "./ERC721Metadata.sol",
          "scope": 3155,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3135,
        "name": "ImportDirective",
        "src": "85:30:25"
      },
      {
        "attributes": {
          "contractDependencies": [
            1703,
            1804,
            1814,
            2790,
            3130,
            3327,
            3430,
            3457,
            3480
          ],
          "contractKind": "contract",
          "documentation": "@title Full ERC721 Token\n@dev This implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology.\n\n * See https://eips.ethereum.org/EIPS/eip-721",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            3154,
            3327,
            3480,
            3130,
            3457,
            2790,
            3430,
            1804,
            1814,
            1703
          ],
          "name": "ERC721Full",
          "scope": 3155
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721",
                  "referencedDeclaration": 2790,
                  "type": "contract ERC721"
                },
                "id": 3136,
                "name": "UserDefinedTypeName",
                "src": "422:6:25"
              }
            ],
            "id": 3137,
            "name": "InheritanceSpecifier",
            "src": "422:6:25"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Enumerable",
                  "referencedDeclaration": 3130,
                  "type": "contract ERC721Enumerable"
                },
                "id": 3138,
                "name": "UserDefinedTypeName",
                "src": "430:16:25"
              }
            ],
            "id": 3139,
            "name": "InheritanceSpecifier",
            "src": "430:16:25"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Metadata",
                  "referencedDeclaration": 3327,
                  "type": "contract ERC721Metadata"
                },
                "id": 3140,
                "name": "UserDefinedTypeName",
                "src": "448:14:25"
              }
            ],
            "id": 3141,
            "name": "InheritanceSpecifier",
            "src": "448:14:25"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 3154,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 3153,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 3142,
                        "name": "ElementaryTypeName",
                        "src": "483:6:25"
                      }
                    ],
                    "id": 3143,
                    "name": "VariableDeclaration",
                    "src": "483:18:25"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "symbol",
                      "scope": 3153,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 3144,
                        "name": "ElementaryTypeName",
                        "src": "503:6:25"
                      }
                    ],
                    "id": 3145,
                    "name": "VariableDeclaration",
                    "src": "503:20:25"
                  }
                ],
                "id": 3146,
                "name": "ParameterList",
                "src": "482:42:25"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3151,
                "name": "ParameterList",
                "src": "561:0:25"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3327,
                      "type": "type(contract ERC721Metadata)",
                      "value": "ERC721Metadata"
                    },
                    "id": 3147,
                    "name": "Identifier",
                    "src": "532:14:25"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3143,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 3148,
                    "name": "Identifier",
                    "src": "547:4:25"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3145,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 3149,
                    "name": "Identifier",
                    "src": "553:6:25"
                  }
                ],
                "id": 3150,
                "name": "ModifierInvocation",
                "src": "532:28:25"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 3152,
                "name": "Block",
                "src": "561:66:25"
              }
            ],
            "id": 3153,
            "name": "FunctionDefinition",
            "src": "470:157:25"
          }
        ],
        "id": 3154,
        "name": "ContractDefinition",
        "src": "399:231:25"
      }
    ],
    "id": 3155,
    "name": "SourceUnit",
    "src": "0:632:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-01T14:58:47.164Z",
  "devdoc": {
    "details": "This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology.  * See https://eips.ethereum.org/EIPS/eip-721",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.     * _Available since v2.5.0._"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.      * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.      * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.      * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Full ERC721 Token"
  },
  "userdoc": {
    "methods": {}
  }
}